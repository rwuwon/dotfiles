# Why use i3?:
# http://adereth.github.io/blog/2013/10/02/why-you-should-try-a-tiling-window-manager/
# https://fedoramagazine.org/getting-started-i3-window-manager/
# -----------------------------------------------------------------------------

# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
#Sets Windows Key/Mod 4 as $mod. Using Alt as $mod is very annoying.

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window normal
new_float normal

# Hide borders
#hide_edge_borders none

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
# For right-handed use on ThinkPad with only one super key
bindsym $mod+Shift+x exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill
#bindsym $mod+BackSpace kill  # This is VERY incompatible with macOS keyboard shortcuts where Alt/Option+Backspace is for deleting words.
bindsym $mod+F4 kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop
bindsym $mod+z exec --no-startup-id rofi -show window

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+semicolon split h
# default for this was $mod+h but h is for left movement now. The only drawback to vim keys.

# split in vertical orientation
bindsym $mod+v split v

bindsym $mod+q split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
#so easy; so fast

# popup_during_fullscreen smart|ignore|leave_fullscreen
popup_during_fullscreen smart

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
# so good for getting an overview of all the window titles for browser windows
bindsym $mod+w layout tabbed
# my favourite layout
bindsym $mod+e layout toggle split
# sometimes handy. I usually don't need this as I can $mod+shift+L a window out to the side to get tiling

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent
# useful when dealing across tiled windows with tabs
bindsym $mod+Shift+a focus child
# good for escaping from $mod+a

# focus the child container
#bindsym $mod+d focus child # this is already binded to dmenu. dmenu is good and fast.

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Show the Rhythmbox scratchpad window with Alt+s, if present.
bindsym mod1+F8 [class="Rhythmbox"] scratchpad show

# move all floating windows to the scratchpad
bindsym $mod+x [floating] move scratchpad
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# this button is amazing fast

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that) - mod+right click and drag *vaguely near* window border to resize!
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        #vim keys again
        bindsym k resize grow height 10 px or 10 ppt
        #default might be swapped
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize shrink height 10 px or 10 ppt
        bindsym Up resize grow height 10 px or 10 ppt
        #default might be swapped again
        bindsym Right resize grow width 10 px or 10 ppt
        #but this makes more sense

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        tray_output primary
        status_command i3status
        # primary display
        output DVI-D-0
        # secondary display
        output HDMI-0
        # Obey Fitts's law
        tray_padding 0
}
# ------------------
# |CUSTOM COMMANDS |
# ------------------
# Startup/boot commands:
# https://i3wm.org/docs/userguide.html#exec

#exec rfkill block bluetooth
#setting mouse acceleration off and keyboard repeat delay fast.
exec_always ~/scripts/keyboardmouse.sh
#exec /usr/bin/parcellite
# Clipboard manager diodon
exec --no-startup-id diodon
#exec redshift-gtk
#background wallpaper
exec --no-startup-id ~/.fehbg
#exec ~/scripts/dropboxd
exec --no-startup-id ~/.dropbox-dist/dropboxd
#exec --no-startup-id conky -c ~/.conkyrc
exec_always --no-startup-id conky -c ~/.config/conky/conky.conf
#exec_always "sleep 15 && ibus-daemon"
exec nvidia-settings --load-config-only

# xprop example: WM_CLASS(STRING) = "rhythmbox", "Rhythmbox" "string","Class"
#assign [class="Vivaldi-stable"] 1
#assign [class="xGoogle-chrome"] 2
#place rhythmbox on window 10 on open
assign [class="Rhythmbox"] 10

# Press $mod+o followed by either f, t, Esc or Return to launch firefox,
# thunderbird or return to the default mode, respectively.
set $mode_launcher Launch: [a]nki [b]lueman [c]alc [e]dge [f]irefox [g]oogle-chrome [i]rssi [j]oplin [k]eepassxc [n]autilus [p]lover [r]hythmbox au[t]hy [v]ivaldi vo[l]ume
bindsym $mod+o mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym a exec anki.flatpak
    bindsym b exec blueman-applet
    bindsym c exec gnome-calculator
    bindsym e exec microsoft-edge
#    bindsym e exec /home/io/eclipse/java-oxygen/eclipse/eclipse
    bindsym f exec firefox
    bindsym g exec google-chrome
    bindsym i exec gnome-terminal -t "irssi" -- fish -c 'mosh io@deb -- tmux attach'
    bindsym j exec flatpak run net.cozic.joplin_desktop
    bindsym k exec keepassxc
    bindsym l exec pavucontrol
    bindsym n exec nautilus
    bindsym p exec /home/io/scripts/plover
    bindsym r exec rhythmbox
    bindsym t exec snap run authy
    bindsym v exec vivaldi
    bindsym x exec i3-sensible-terminal

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# Faster:
bindsym ctrl+$mod+1 exec firefox
bindsym ctrl+$mod+2 exec microsoft-edge
bindsym ctrl+$mod+3 exec firefox-esr

#bindsym ctrl+$mod+6 exec gnome-terminal -t "irssi" -- fish -c 'mosh io@deb -- tmux attach'
bindsym ctrl+$mod+6 exec 'mosh io@deb -- tmux attach'
bindsym ctrl+$mod+7 exec keepassxc
bindsym ctrl+$mod+8 exec gnome-calculator
bindsym ctrl+$mod+9 exec nautilus
bindsym ctrl+$mod+0 exec libreoffice --calc
# for #i3 troubleshooting:
# exec_always sleep 10 && gnome-terminal -t "asdf" -- zsh -c 'bc' && sleep 10

#set $mode_launcher2 Launch: [power]
#bindsym $mod+F1 mode "$mode_launcher2"

for_window [class="keepassxc"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="Nvidia-settings"] floating enable
for_window [class="Nm-connection-editor"] floating enable
for_window [class="Firefox" instance="Places"] floating enable
for_window [class="Firefox" instance="Browser"] floating enable
for_window [class="GParted"] floating enable
for_window [class="Gnome-disks"] floating enable
for_window [class="Toplevel"] floating enable
for_window [class="Gnome-screenshot"] floating enable
for_window [class="retroarch"] floating enable
for_window [class="gnome-calculator"] floating enable
#for_window [class="Gnome-calculator"] floating enable

#doesn't work due to dual displays:
#for_window [class="Ibus-extension-gtk3"] floating enable

# 4.28. Focus on window activation: smart|urgent|focus|none
focus_on_window_activation smart

#lock machine before suspending
bindsym Ctrl+$mod+l exec i3lock -f -c 5b1c27 && sleep 1 && systemctl suspend

# Lock machine - use dark brown colour to show that screen is not off
bindsym Ctrl+$mod+p exec i3lock -f -c 5b1c27

#bindsym Print exec gnome-screenshot -i #screenshot dialog via the same dialog as Ubuntu.
# https://www.reddit.com/r/i3wm/comments/5a9304/problems_with_hotkeying_gnomescreenshot_a/
bindsym --release $mod+Print exec gnome-screenshot -i
#bindsym --release Print exec gnome-screenshot -i
#bindsym --release Mod1+Sys_Req exec gnome-screenshot -w
#bindsym --release Shift+Print exec gnome-screenshot -a
#bindsym --release Ctrl+Print exec gnome-screenshot -c
#bindsym --release Ctrl+Mod1+Sys_Req exec gnome-screenshot -c -w
#bindsym --release Ctrl+Shift+Print exec gnome-screenshot -c -a
#bindsym $mod+Mod1+Shift+3 exec gnome-screenshot -i
#bindsym $mod+Mod1+Shift+4 exec gnome-screenshot -i

# maim works with lossless webp, unlike gnome-screenshot 41.0
# screenshot everything, save & copy to clipboard
bindsym --release Print exec maim -m 10 | tee ~/Pictures/screenshots/$(date --iso-8601=seconds).webp | xclip -selection clipboard -t image/png
# macOS binding for muscle memory training
bindsym $mod+Mod1+Shift+3 exec maim -m 10 | tee ~/Pictures/screenshots/$(date --iso-8601=seconds).webp | xclip -selection clipboard -t image/png
# screenshot active window, save & copy to clipboard
bindsym --release Ctrl+Print exec maim -m 10 -i $(xdotool getactivewindow) | tee ~/Pictures/screenshots/$(date --iso-8601=seconds).webp | xclip -selection clipboard -t image/png
# screenshot selection, save & copy to clipboard
bindsym --release Ctrl+Shift+Print exec maim -s -m 10 | tee ~/Pictures/screenshots/$(date --iso-8601=seconds).webp | xclip -selection clipboard -t image/png
# macOS binding for muscle memory training
bindsym $mod+Mod1+Shift+4 exec maim -s -m 10 | tee ~/Pictures/screenshots/$(date --iso-8601=seconds).webp | xclip -selection clipboard -t image/png
# screenshot active window to clipboard only
bindsym --release Shift+Print exec maim -i $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
# screenshot active window to clipboard only, alternate binding
bindsym $mod+Shift+z exec maim -i $(xdotool getactivewindow) | xclip -selection clipboard -t image/png

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% #increase sound volume
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% #decrease sound volume
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle # mute sound

# Dual monitor setup:
bindsym $mod+F12 exec pactl set-sink-volume @DEFAULT_SINK@ +5% #increase sound volume
bindsym $mod+F11 exec pactl set-sink-volume @DEFAULT_SINK@ -5% #decrease sound volume
bindsym $mod+Ctrl+F12 exec pactl set-sink-volume @DEFAULT_SINK@ 100% # volume 100% #helps me not go above 100%
bindsym $mod+F10 exec pactl set-sink-mute @DEFAULT_SINK@ toggle # mute sound

# Single monitor setup:
#bindsym $mod+F12 exec pactl set-sink-volume 0 +5% #increase sound volume
#bindsym $mod+F11 exec pactl set-sink-volume 0 -5% #decrease sound volume
#bindsym $mod+Ctrl+F12 exec pactl set-sink-volume 0 100% # volume 100% #helps me not go above 100%
#bindsym $mod+F10 exec pactl set-sink-mute 0 toggle # mute sound

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

#force_focus_wrapping yes #tiled window with tabs; keep alt-tab to the same window


# Resizing windows in i3 using keyboard only
# http://unix.stackexchange.com/q/255344/150597

# Resizing by 1
bindsym $mod+Ctrl+Shift+Right resize grow width 1 px or 1 ppt
bindsym $mod+Ctrl+Shift+Up resize grow height 1 px or 1 ppt
bindsym $mod+Ctrl+Shift+Down resize shrink height 1 px or 1 ppt
bindsym $mod+Ctrl+Shift+Left resize shrink width 1 px or 1 ppt

# Resizing by 10
bindsym $mod+Ctrl+Right resize grow width 10 px or 10 ppt
bindsym $mod+Ctrl+Up resize grow height 10 px or 10 ppt
bindsym $mod+Ctrl+Down resize shrink height 10 px or 10 ppt
bindsym $mod+Ctrl+Left resize shrink width 10 px or 10 ppt

# Focus next/previous workspace
bindsym Mod1+Tab focus right
bindsym Mod1+grave focus left
bindsym Mod1+Shift+Tab focus left
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+grave workspace back_and_forth
bindsym $mod+Shift+grave move container to workspace back_and_forth; workspace back_and_forth
#bindsym Mod1+grave focus container back_and_forth

# Switch window/workspace with mod+scroll and mod+shift scroll #thanks reddit.com/r/i3wm
bindsym --whole-window --border $mod+button4 focus left
bindsym --whole-window --border $mod+button5 focus right
bindsym --whole-window --border $mod+shift+button4 workspace prev
bindsym --whole-window --border $mod+shift+button5 workspace next

# The middle button over a titlebar kills the window
bindsym --release button2 kill
#
# # The middle button and a modifer over any part of the window kills the window
# bindsym --whole-window $mod+button2 kill
#
# # The right button toggles floating
bindsym button3 floating toggle
# bindsym $mod+button3 floating toggle
#
# # The side buttons move the window around
bindsym button9 move right
bindsym button8 move left

# hide/unhide i3status bar
bindsym $mod+m bar mode toggle

# Stop mouse pointer jumping when screens are switched
# https://i3wm.org/docs/userguide.html#_mouse_warping
mouse_warping output

# Swap alt & cmd keys on MBP
# https://www.reddit.com/r/i3wm/comments/552ylr/what_is_your_lappy_mod_key/d87cmo6/
#exec setxkbmap -option 'altwin:swap_alt_win'

# MBP 13,1 sreen brightness controls
#bindsym XF86MonBrightnessUp exec xbacklight -inc 1 # increase screen brightness
#bindsym XF86MonBrightnessDown exec xbacklight -dec 1 # decrease screen brightness
#bindsym Shift+XF86MonBrightnessUp exec xbacklight -inc 5 # increase screen brightness
#bindsym Shift+XF86MonBrightnessDown exec xbacklight -dec 5 # decrease screen brightness
bindsym $mod+XF86MonBrightnessUp exec --no-startup-id brightnessctl set 100%
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl -e set +5%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl -e set 5%-

# https://wiki.archlinux.org/index.php/Keyboard_backlight
#bindsym XF86KbdBrightnessUp exec kblight.py + 1
#bindsym XF86KbdBrightnessDown exec kblight.py - 10

#2023-05-09 Temporarily commented out the following 2 lines for single monitor operation
workspace 1 output primary
workspace 10 output HDMI-0

assign [class="Firefox-esr"] 8
#assign [class="Google-chrome"] 3
assign [class="Microsoft-edge-dev"] 8
exec --no-startup-id xss-lock -n -- ~/scripts/lock.sh
